000100000000 /*------------------------------------------------------------------*/
000200000000 /*   THIS MATERIAL IS LICENSED BY VISION-C CONSULTING INC. (VCCI)   */
000300000000 /*------------------------------------------------------------------*/
000400000000 /* Designed By: Hiram Hubbard                                       */
000500000000 /*                                                                  */
000600221128 /*     Program: XXC012A.Application Program                         */
000700000000 /*                                                                  */
000800000000 /*  Decription: This is a sample program to show how to use QAQQINI */
000900000000 /*              to do SQL Parallel Index Maintenance with DB2 SMP   */
001000000000 /*                                                                  */
001100000000 /*  Example ONLY  (Training)                                        */
001200000000 /********************************************************************/
001300000000 /* All rights reserved.                                             */
001400000000 /*                                                                  */
001500000000 /* Licensed Materials - Property of VCCI                            */
001600000000 /********************************************************************/
001700000000 /********************************************************************/
001800000000 /*                      Mod ID                                      */
001900000000 /*    Date    Initials  Number      Description                     */
002000000000 /*  --------  --------  --------    ------------------------------- */
002100000000 /* 01/2021     HLH                  Initial Write                   */
002200000000 /********************************************************************/
004300000000
004400000000             PGM        PARM(&CURLIB &FLAG)
004500000000
004600000000 /* work variables for message handling */
004700000000             DCL        VAR(&MSGDTA) TYPE(*CHAR) LEN(256) VALUE(' ')
004800000000             DCL        VAR(&MSGF) TYPE(*CHAR) LEN(10) VALUE(' ')
004900000000             DCL        VAR(&MSGFLIB) TYPE(*CHAR) LEN(10) VALUE(' ')
005000000000             DCL        VAR(&MSGID) TYPE(*CHAR) LEN(7) VALUE(' ')
005100000000
005200000000 /* program work variables  */
005300000000             DCL        VAR(&EOCS) TYPE(*LGL) VALUE('0')
005400000000             DCL        VAR(&CURLIB ) TYPE(*CHAR) LEN(10)
005500000000             DCL        VAR(&FLAG ) TYPE(*CHAR) LEN(1)
005600000000             DCL        VAR(&JRN_FLAG) TYPE(*LGL) VALUE('1')
005700000000             DCL        VAR(&TRG_FLAG) TYPE(*LGL) VALUE('1')
005800000000             DCL        VAR(&Sys_Name ) TYPE(*CHAR) LEN(8)
005900000000             DCL        VAR(&JRN_IMAGE) TYPE(*CHAR) LEN(10) VALUE('*BOTH ')
006000000000
006100000000 /* work file  for compile only */
006200000000             DCLF       ITPDSPFD
006300000000
006400000000 /* set compile activation group                                     */
006500000000             DCLPRCOPT  DFTACTGRP(*NO) ACTGRP(*CALLER)
006600000000
006700000000 /* program-level monitor message */
006800000000             MONMSG     MSGID(CPF9999) EXEC(GOTO CMDLBL(ERROR))
006900000000
007000000000 /* turn on logging               */
007100000000             CHGJOB     LOG(4 00 *SECLVL) LOGCLPGM(*YES)
007200000000
007300000000             RTVNETA    SYSNAME(&Sys_Name)
007400000000
007500000000             DSPFD      FILE(INVSUM) TYPE(*MBR) OUTPUT(*OUTFILE) +
007600000000                          OUTFILE(QTEMP/ITPDSPFD)
007700000000
007800000000             OVRDBF     FILE(ITPDSPFD) TOFILE(QTEMP/ITPDSPFD)
007900000000
008000000000             Rcvf
008100000000
008200000000             IF         COND(&FLAG *EQ 'Y') THEN(DO)
008300000000                CHGVAR     VAR(&CURLIB) VALUE(&MBLIB)
008400000000             ENDDO
008500000000
008600000000
008700000000 /* End Journaling on DDL                                            */
008800000000
008900000000             ENDJRNPF   FILE(&CURLIB/INSVSUM)
009000000000             MONMSG     MSGID(CPC7033)
009100000000
009200000000             CLRPFM     FILE(&CURLIB/INSVSUM)
009300000000
009400000000 /* call the actual convision program                                  */
009500000000             OVRDBF     FILE(INSVSUM) TOFILE(&CURLIB/INSVSUM) +
009600000000                          REUSEDLT(*NO) SEQONLY(*YES *BUF256KB)
009700000000
009800000000 /* call subroutine                                                 */
009900000000             CALLSUBR   SUBR(SMP_PROCES)
010000221128             CALL       PGM(XXR012A)
010100000000
010200000000 /* set Journal Image on DDL same as DDS         */
010300000000             IF         COND(&MBJRIM *EQ 'A') THEN(DO)
010400000000                CHGVAR     VAR(&Jrn_Image) VALUE('*AFTER')
010500000000             ENDDO
010600000000
010700000000 /* Do journaling base on DDS Table                                     */
010800000000             IF         COND(&MBJRNL *EQ 'Y') THEN(DO)
010900000000
011000000000             STRJRNPF   FILE(&CURLIB/INSVSUM) JRN(&MBJRLB/&MBJRNM) +
011100000000                          IMAGES(&JRN_IMAGE) OMTJRNE(*OPNCLO)
011200000000             ENDDO
011300000000
011400000000
011500000000             RETURN
011600000000
011700000000 ERROR:
011800000000             CALLSUBR   SUBR(GLOBAL_ERR)
011900000000 /*------------------------------------------------------------------*/
012000000000 /* Subroutine GLOBAL_ERR: Program Level MONMSG detected             */
012100000000 /*------------------------------------------------------------------*/
012200000000             SUBR       GLOBAL_ERR
012300000000
012400000000                DoWhile    COND( *NOT &EOCS)
012500000000             RCVMSG     RMV(*YES) MSGDTA(&MSGDTA) MSGID(&MSGID) +
012600000000                          MSGF(&MSGF) MSGFLIB(&MSGFLIB)
012700000000                   MONMSG     MSGID(CPF9999) EXEC(LEAVE)
012800000000
012900000000 /* Check if no more messages */
013000000000                   IF         COND(&MSGID = ' ') THEN(LEAVE)
013100000000
013200000000             SNDPGMMSG  MSGID(&MSGID) MSGF(&MSGFLIB/&MSGF) +
013300000000                          MSGDTA(&MSGDTA) MSGTYPE(*DIAG)
013400000000                   MONMSG     MSGID(CPF9999) EXEC(LEAVE)
013500000000
013600000000                Enddo
013700000000
013800000000 /* Unexpected Function check found send messages to user  */
013900000000             SNDPGMMSG  MSGID(CPF9898) MSGF(QCPFMSG) +
014000000000                          MSGDTA('Procrdure ended in error. See +
014100000000                          previously listed messages') MSGTYPE(*COMP)
014200000000
014300000000             ENDSUBR
014400000000
014500000000 /*------------------------------------------------------------------*/
014600000000 /* Subroutine SMP_PROCES: Turn *ON DB2 SMP once per program cycle   */
014700000000 /*------------------------------------------------------------------*/
014800000000             SUBR       SMP_PROCES
014900000000
015000000000             CRTDUPOBJ  OBJ(QAQQINI) FROMLIB(QSYS) OBJTYPE(*FILE) +
015100000000              TOLIB(QTEMP) DATA(*YES) TRG(*YES)
015200000000             MONMSG     MSGID(CPF2130)
015300000000
015400000000 /* Turn on SMP base on total number of threads */
015500000000             CHGQRYA    DEGREE(*NBRTASKS 3) QRYOPTLIB(QTEMP)
015600000000
015700000000             ENDSUBR
015800000000
015900000000             ENDPGM
016000000000
